version: "3.6"

services:
  resolver-mongo-service:
    build: './resolver_mongo_server'
    container_name: resolver-mongo-server
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - resolver-document-volume:/data/db
    networks:
      - resolver-internal-network

  digitallink-toolkit-service:
    build: "./digitallink_toolkit_server"
    container_name: digitallink-toolkit-server
    ports:
      - "3001:3001"
    environment: 
      - PORT=3001
    restart: always
    networks:
      - resolver-internal-network

  build-sync-service:
    build: './build_sync_server'
    container_name: build-sync-server
    ports:
      - "3004:3004"
    environment:
      - SQLDBCONN_USER=sa
      - SQLDBCONN_PASSWORD=its@SECR3T!
      - SQLDBCONN_SERVER=sql-server
      - SQLDBCONN_DB=gs1-resolver-ce-v2-1-db
      - BUILD_HOSTNAME=build_job
      - DOCKER_COMPOSE_RUN=N
      - PORT=3004
    depends_on:
      - resolver-mongo-service
    restart: always
    networks:
      - resolver-internal-network

  dashboard-sync-service:
    build: './dashboard_sync_server'
    container_name: dashboard-sync-server
    ports:
      - "3003:3003"
    environment:
      - SQLDBCONN_USER=sa
      - SQLDBCONN_PASSWORD=its@SECR3T!
      - SQLDBCONN_SERVER=sql-server
      - SQLDBCONN_DB=gs1-resolver-ce-v2-1-db
      - BUILD_HOSTNAME=dashboard_job
      - DOCKER_COMPOSE_RUN=Y
      - DOCKER_RUN_INTERVAL_SECS=120
      - PORT=3003
    depends_on:
      - resolver-mongo-service
    restart: always
    networks:
      - resolver-internal-network


  data-entry-service:
    build: './resolver_data_entry_server'
    container_name: data-entry-server
    ports:
      - "3000:3000"
    environment:
      - SQLDBCONN_USER=sa
      - SQLDBCONN_PASSWORD=its@SECR3T!
      - SQLDBCONN_SERVER=sql-server
      - SQLDBCONN_DB=gs1-resolver-ce-v2-1-db
      - PORT=3000
    depends_on:
      - resolver-mongo-service
    restart: always
    networks:
      - resolver-internal-network

  id-service:
    build: './resolver_web_server'
    container_name: resolver-web-server
    ports:
      - "3002:3002"
    depends_on:
      - resolver-mongo-service
    environment: 
      - PORT=3002
    restart: always
    networks:
      - resolver-internal-network

  frontend-proxy-service:
    build: './frontend_proxy_server'
    container_name: frontend-proxy-server
    depends_on:
      - id-service
    restart: always
    ports:
      - "80:80"
    networks:
      - resolver-internal-network

  sql-server:
    build: './resolver_sql_server'
    container_name: resolver-sql-server
    volumes:
      - sql-server-volume-db-data:/var/opt/mssql/data
      - sql-server-volume-db-log:/var/opt/mssql/log
      - sql-server-volume-db-secrets:/var/opt/mssql/secrets
      - sql-server-dbbackup-volume:/dbbackup
    environment:
      DEBIAN_FRONTEND: noninteractive
      ACCEPT_EULA: Y
      TZ: Europe/London
      MSSQL_SA_PASSWORD: its@SECR3T!
      MSSQL_PID: Developer
      MSSQL_LCID: 1033
      MSSQL_MEMORY_LIMIT_MB: 1024
      MSSQL_AGENT_ENABLED: "true"
    restart: always
    ports:
      - 1433:1433
    networks:
      - resolver-internal-network

volumes:
  sql-server-volume-db-data: {}
  sql-server-volume-db-log: {}
  sql-server-volume-db-secrets: {}
  sql-server-dbbackup-volume: {}
  resolver-document-volume: {}

networks:
  resolver-internal-network:
    name: resolver-internal-network

